/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.suslsport.sportmgtsystem.view;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.suslsport.sportmgtsystem.ThirdPartyFn.ComboSearch;
import org.suslsport.sportmgtsystem.ThirdPartyFn.DatePickerSample;
import org.suslsport.sportmgtsystem.controller.ItemController;
import org.suslsport.sportmgtsystem.controller.OnHandQuantityContrller;
import org.suslsport.sportmgtsystem.controller.RemoveDamageController;
import org.suslsport.sportmgtsystem.model.OnHandQuantity;
import org.suslsport.sportmgtsystem.model.RemoveDamage;

/**
 *
 * @author RedHunter
 */
public class RemoveDamageView extends javax.swing.JPanel {

    Main aThis = null;

    /**
     * Creates new form RemoveDamage
     */
    public RemoveDamageView(Main aThis) {
        initComponents();
        this.aThis = aThis;
        try {
            loadItems();
        } catch (ClassNotFoundException ex) {
            String message = ex.getMessage();
            JOptionPane.showMessageDialog(aThis, message, "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            String message = ex.getMessage();
            JOptionPane.showMessageDialog(aThis, message, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void loadItems() throws ClassNotFoundException, SQLException {
        ArrayList<String> allItemName = ItemController.getAllItemName();
        jComboBox_equipments.removeAllItems();
        jComboBox_equipments.addItem("Select a damage equipment name");

        for (String string : allItemName) {
            jComboBox_equipments.addItem(string);
        }
        ComboSearch comboSearch = new ComboSearch();
        comboSearch.setSearchableCombo(jComboBox_equipments, true, TOOL_TIP_TEXT_KEY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_quantity = new javax.swing.JTextField();
        jComboBox_equipments = new javax.swing.JComboBox<>();
        jButton_Remove_dmg = new javax.swing.JButton();
        jButton_cancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Sport equipment name  :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Quantity                        :");

        jTextField_quantity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_quantityKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_quantityKeyTyped(evt);
            }
        });

        jComboBox_equipments.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButton_Remove_dmg.setBackground(new java.awt.Color(0, 153, 255));
        jButton_Remove_dmg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Remove_dmg.setText("Report Damage");
        jButton_Remove_dmg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Remove_dmg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_dmgActionPerformed(evt);
            }
        });

        jButton_cancel.setBackground(new java.awt.Color(255, 102, 102));
        jButton_cancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_cancel.setText("Cancel");
        jButton_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancelActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Report a Damage");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(420, 420, 420)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_Remove_dmg, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(jComboBox_equipments, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3))
                .addGap(0, 457, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_equipments, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Remove_dmg, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(342, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancelActionPerformed
        // TODO add your handling code here:
        aThis.damage = null;
        aThis.getjPanel_Remove_Damage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton_cancelActionPerformed

    private void jButton_Remove_dmgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_dmgActionPerformed
        // TODO add your handling code here:
        if (jComboBox_equipments.getSelectedIndex() > 0) {

            String itemName = jComboBox_equipments.getSelectedItem().toString();
            String quantity = jTextField_quantity.getText();
            if (!itemName.equals("") && !quantity.equals("")) {
                int qua = Integer.parseInt(quantity);
                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                Calendar cal = Calendar.getInstance();
                String date = dateFormat.format(cal.getTime());
                try {
                    String relevantItemId = ItemController.getRelevantItemId(itemName);

                    boolean checkAddRow = OnHandQuantityContrller.checkAddRow(relevantItemId);
                    
                    if (checkAddRow) {
                        int updateDamage = OnHandQuantityContrller.updateDamage(relevantItemId);
                        System.out.println(updateDamage);
                        if (updateDamage > 0 && updateDamage >= qua) {
                            OnHandQuantity handQuantity = new OnHandQuantity(relevantItemId, qua);
                            OnHandQuantityContrller.updateRowOuting(handQuantity);
                            RemoveDamage damage = new RemoveDamage(date, relevantItemId, qua);
                            boolean insertRow = RemoveDamageController.insertRow(damage);
                            loadItems();
                            jTextField_quantity.setText("");
                            JOptionPane.showMessageDialog(null, "Successfully reported a damage");
                        } else {
                            JOptionPane.showMessageDialog(null, "Selected equipment unavailable or can not reomve '"+qua+"' quantities from '"+itemName+"'");

                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Selected equipment unavailable in stock");
                    }

                } catch (ClassNotFoundException ex) {
                    String message = ex.getMessage();
                    JOptionPane.showMessageDialog(aThis, "E1", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    String message = ex.getMessage();
                    JOptionPane.showMessageDialog(aThis, "E2", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "You must fill all fields", "Warning", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "You must select a equipment name", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton_Remove_dmgActionPerformed

    private void jTextField_quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_quantityKeyPressed
        // TODO add your handling code here:
        setNumericOnly(jTextField_quantity);
    }//GEN-LAST:event_jTextField_quantityKeyPressed

    private void jTextField_quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_quantityKeyTyped
        // TODO add your handling code here:
        checkCharacter(jTextField_quantity);
    }//GEN-LAST:event_jTextField_quantityKeyTyped
    public static void checkCharacter(JTextField jTextField) {

        jTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (jTextField.getText().length() >= 1) // limit textfield to 3 characters
                {
                    e.consume();
                }
            }
        });
    }

    public static void setNumericOnly(JTextField jTextField) {
        jTextField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();

                if ((!Character.isDigit(c)
                        || (c == KeyEvent.VK_BACK_SPACE)
                        || (c == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Remove_dmg;
    private javax.swing.JButton jButton_cancel;
    private javax.swing.JComboBox<String> jComboBox_equipments;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField_quantity;
    // End of variables declaration//GEN-END:variables
}
