/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.suslsport.sportmgtsystem.view;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.suslsport.sportmgtsystem.ThirdPartyFn.ComboSearch;
import org.suslsport.sportmgtsystem.controller.ItemController;
import org.suslsport.sportmgtsystem.controller.OnHandQuantityContrller;
import org.suslsport.sportmgtsystem.model.OnHandQuantity;

/**
 *
 * @author RedHunter
 */
public class AddOnHandQuantity extends javax.swing.JPanel {

    Main aThis = null;

    /**
     * Creates new form AddOnHandQuantity
     */
    public AddOnHandQuantity(Main aThis) {
        initComponents();
        this.aThis = aThis;
        try {
            loadCombo();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddOnHandQuantity.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddOnHandQuantity.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void loadCombo() throws ClassNotFoundException, SQLException {
        ComboSearch comboSea = new ComboSearch();
        ArrayList<String> allItemName = null;
        jComboBox_ItemName.removeAllItems();
        jComboBox_ItemName.addItem("Select Item");

        allItemName = ItemController.getAllItemName();

        for (String string : allItemName) {
            jComboBox_ItemName.addItem(string);

        }
        comboSea.setSearchableCombo(jComboBox_ItemName, true, "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_QUAN = new javax.swing.JTextField();
        jComboBox_ItemName = new javax.swing.JComboBox<>();
        jButton_addOnHandQuantity = new javax.swing.JButton();
        jButton_addOnHandQuantity1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1360, 610));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Item Name                            :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Quantity                               :");

        jTextField_QUAN.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField_QUAN.setToolTipText("Enter an quantity");
        jTextField_QUAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_QUANActionPerformed(evt);
            }
        });
        jTextField_QUAN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_QUANKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_QUANKeyTyped(evt);
            }
        });

        jComboBox_ItemName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_ItemName.setToolTipText("Select a name of sport equipments");

        jButton_addOnHandQuantity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_addOnHandQuantity.setText("Add On Hand Quantity");
        jButton_addOnHandQuantity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_addOnHandQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addOnHandQuantityActionPerformed(evt);
            }
        });

        jButton_addOnHandQuantity1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_addOnHandQuantity1.setText("Cancel");
        jButton_addOnHandQuantity1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_addOnHandQuantity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addOnHandQuantity1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Add On Hand Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(419, 419, 419)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_QUAN, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_addOnHandQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_addOnHandQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(426, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_QUAN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_addOnHandQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_addOnHandQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(342, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_addOnHandQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addOnHandQuantityActionPerformed
        // TODO add your handling code here:
        String itemName = jComboBox_ItemName.getSelectedItem().toString();
        String textinput = jTextField_QUAN.getText();
        if (!textinput.equals("")) {
            int quantityNew = Integer.parseInt(textinput);
            int old = 0;
            if (jComboBox_ItemName.getSelectedIndex() > 0) {
                ArrayList<String> allItemName = null;
                try {
                    allItemName = ItemController.getAllItemName();
                } catch (ClassNotFoundException | SQLException ex) {
                    System.out.println("45");
                }
                for (String string : allItemName) {
                    
                    boolean equals = string.equals(itemName);
                    if (equals) {
                        try {
                            String relevantItemId = ItemController.getRelevantItemId(itemName);
                            boolean checkAddRow = OnHandQuantityContrller.checkAddRow(relevantItemId);

                            if (checkAddRow) {
                                ResultSet res = OnHandQuantityContrller.checkRow(relevantItemId);
                                if (res.last()) {
                                    String quanti = res.getString(2);
                                    old = Integer.parseInt(quanti);
                                }
                                int lastQuantity = old + quantityNew;
                                OnHandQuantity handQ = new OnHandQuantity(relevantItemId, lastQuantity);
                                boolean updateRow = OnHandQuantityContrller.updateRow(handQ);
                                loadCombo();
                                jTextField_QUAN.setText("");
                                JOptionPane.showMessageDialog(aThis, "Quantity is updated");

                            } else {
                                OnHandQuantity handQuantity = new OnHandQuantity(relevantItemId, quantityNew);
                                OnHandQuantityContrller.addRow(handQuantity);
                                loadCombo();
                                jTextField_QUAN.setText("");
                                JOptionPane.showMessageDialog(aThis, "Quantity is updated");
                            }
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(AddOnHandQuantity.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            System.out.println("e1");
                        }

                    }
                    
                   
                }

            } else {
                JOptionPane.showMessageDialog(aThis, "Please select suggest item or add you item name via Add Item function");
            }
        } else {
            JOptionPane.showMessageDialog(aThis, "You must enter an quantity");
        }

    }//GEN-LAST:event_jButton_addOnHandQuantityActionPerformed

    private void jTextField_QUANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_QUANActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_QUANActionPerformed

    private void jButton_addOnHandQuantity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addOnHandQuantity1ActionPerformed
        // TODO add your handling code here:

        aThis.getjPanel_onhandQuantity().setVisible(true);
        this.setVisible(false);


    }//GEN-LAST:event_jButton_addOnHandQuantity1ActionPerformed

    private void jTextField_QUANKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_QUANKeyPressed
        // TODO add your handling code here:
        setNumericOnly(jTextField_QUAN);
    }//GEN-LAST:event_jTextField_QUANKeyPressed

    private void jTextField_QUANKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_QUANKeyTyped
        // TODO add your handling code here:
        checkCharacter(jTextField_QUAN);
    }//GEN-LAST:event_jTextField_QUANKeyTyped
    public static void setNumericOnly(JTextField jTextField) {
        jTextField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();

                if ((!Character.isDigit(c)
                        || (c == KeyEvent.VK_BACK_SPACE)
                        || (c == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });
    }

    public static void checkCharacter(JTextField jTextField) {

        jTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (jTextField.getText().length() >= 4) // limit textfield to 3 characters
                {
                    e.consume();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_addOnHandQuantity;
    private javax.swing.JButton jButton_addOnHandQuantity1;
    private javax.swing.JComboBox<String> jComboBox_ItemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField_QUAN;
    // End of variables declaration//GEN-END:variables
}
